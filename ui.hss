# OHR Community Point & Click Adventure
# ui.hss
# created by kylekrack
# Includes most mouse button functions, like GUI and clicking the map

script, mouseHover, x, y, begin
    # Checks to see if the mouse is hovering over any slice that should change
    # as a result of being hovered over: eg. menu buttons, interactive objects
    variable(sl) 
    
    sl := sliceAtPixel(spriteLayer, mousePixelX, mousePixelY, 0, true, false)
end

script, lmbDownActions, x, y, begin
    # Called from main game loop when lmb is pressed down
    variable(sl)

    sl := sliceAtPixel(hud, x, y, 0, true, true) # Only get visible slices for HUD
    if(sl == false) then(
        # Not clicking on the hud, therefore clicking on the map
        switch(actionState) do(
            case(else) do(
                # Do nothing
            )
        )
    ) else(
        # Mouse Down GUI actions go here
    )
end

script, lmbUpActions, x, y, begin
    # Called from main game loop when lmb is released
    variable(sl)
    
    sl := sliceAtPixel(hud, x, y, 0, true, true) # Only get visible slices for HUD
    if(sl == false) then(
        # Not clicking on the hud, therefore clicking on the map
        switch(actionState) do(
            case(state:walk) do(
                # X and Y are relative to hero's current location
                x := mousePixelX -- heroPixelX(me)
                y := mousePixelY -- heroPixelY(me)
                clickMovePlayer(x, y)
            )
            case(state:look) do(
                sl := sliceAtPixel(interactCol, x, y, 0, true, false) # Find interactive slice
                if(getSliceLookup(sl) == sli:look) then(
                    # Look at thing
                    
                ) else(
                    # Say there's nothing to Look at
                    
                )
            )
            case(state:use) do(
                # Find an interactive slice, or say there's nothing to interact with.
                
            )
            case(else) do(
                # Do nothing
            )
        )
    ) else(
        # Clicking something on the HUD
        
    )
end

script, rmbDownActions, x, y, begin
    # Called from main game loop when rmb is clicked
    
end

script, rmbUpActions, x, y, begin
    # Called from main game loop when rmb is released
    if(topMenu) then(closeMenu(topMenu))
end